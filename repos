#! /usr/bin/env bash

usage() {
cat <<EOS
  Repos
  A git tool for managing multiple repos.

  USAGE: repos [command]

  COMMANDS:
  list              List discovered repos
  status            Show git status of each repo (get details with 'repos status -l')
  latest            Show the latest tag for each repo
  update            Pull latest changes for each repo
  unpushed          Show commits that have not yet been pushed for each repo
  untagged          Show commits since the last tag for each repo
  unreleased        Show tags that have not been pushed yet for each repo

  repos can also run any arbitrary command on each repo. Note there is no validation
  done on these commands so be careful!

  examples:
    - repos list
    - repos status
    - repos git log -n 3
EOS
}

if [ "$1" != "" ]; then
  case "$1" in
    list )        find . -exec test -d '{}'/.git \; -print -prune
      ;;
    update )      gfind . -name .git -printf "\n%h\n" -execdir git pull \;
      ;;
    status )      gfind . -name .git -printf "\n%h\n" -execdir git status -s \;
      ;;
    unpushed )    gfind . -name .git -printf "\n%h\n" -execdir git log origin/master..master \;
      ;;
    untagged )    gfind . -name .git -printf "\n%h\n" -execdir git log $(git describe --tags --abbrev=0)..HEAD --oneline \;
      ;;
    unreleased )  gfind . -name .git -printf "\n%h\n" -execdir git show-ref --tags | grep -v -F "$(git ls-remote --tags origin | cut -f 2)" | cut -d " " -f 2 | sed "s|refs/tags/||" \;
      ;;
    latest )      gfind . -name .git -printf "\n%h\n" -execdir git describe --tags \;
      ;;
    help )        usage
      exit
      ;;
    * )           gfind . -name .git -printf "\n%h\n" -execdir $@ \;
      ;;
  esac
else
  usage
  exit 1
fi
